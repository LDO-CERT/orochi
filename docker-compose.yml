version: "3"

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  media_path: {}
  symbols_path: {}
  plugin_path: {}
  cache_path: {}
  yara_path: {}
  data01:
    driver: local

services:

  nginx:
    build:
      context: .
      dockerfile: ./compose/local/nginx/Dockerfile
    image: ghcr.io/ldo-cert/orochi_nginx:${VERSION:-latest}
    container_name: orochi_nginx
    depends_on:
      - django_asgi
      - django_wsgi
    volumes:
      - ./compose/local/nginx/conf:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"

  django_wsgi:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - local_upload_path
    image: ghcr.io/ldo-cert/orochi_django:${VERSION:-latest}
    container_name: orochi_django_wsgi
    hostname: django
    restart: always
    depends_on:
      - postgres
      - mailpit
    volumes:
      - media_path:/media
      - symbols_path:/src/volatility3/volatility3/symbols
      - plugin_path:/src/volatility3/volatility3/plugins/custom
      - yara_path:/yara
      - cache_path:/root/.cache/volatility3
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    environment:
      - http_proxy=${http_proxy}
      - https_proxy=${https_proxy}
    expose:
      - 8000
    command: /start

  django_asgi:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - local_upload_path
    image: ghcr.io/ldo-cert/orochi_django:${VERSION:-latest}
    container_name: orochi_django_asgi
    hostname: django
    restart: always
    depends_on:
      - postgres
      - mailpit
    volumes:
      - media_path:/media
      - symbols_path:/src/volatility3/volatility3/symbols
      - plugin_path:/src/volatility3/volatility3/plugins/custom
      - yara_path:/yara
      - cache_path:/root/.cache/volatility3
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    environment:
      - http_proxy=${http_proxy}
      - https_proxy=${https_proxy}
    expose:
      - 9000
    command: daphne -b 0.0.0.0 -p 9000 config.asgi:application

  postgres:
    image: postgres:16.2
    container_name: orochi_postgres
    hostname: postgres
    restart: always
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    ports:
      - "5432:5432"

  mailpit:
    image: 'axllent/mailpit:latest'
    container_name: orochi_mailpit
    hostname: mailpit
    restart: always
    ports:
      - "1025:1025"
      - "8025:8025"

  redis:
    image: redis:6.2.5
    container_name: orochi_redis
    hostname: redis
    restart: always
    ports:
      - "6379:6379"

  es01:
    image: elasticsearch:8.9.0
    container_name: orochi_es01
    environment:
      - discovery.type=single-node
      - node.name=es01
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - logger.level=WARN
      - xpack.ml.enabled=false
      - xpack.security.enabled=false
      - xpack.watcher.enabled=false
      - ingest.geoip.downloader.enabled=false
    hostname: es01
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  kib01:
    image: kibana:8.9.0
    container_name: orochi_kib01
    ports:
      - 5601:5601
    hostname: kib01
    restart: always
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
      TELEMETRY_ENABLED: "false"
      MONITORING_ENABLED: "false"

  scheduler:
    image: ghcr.io/ldo-cert/orochi_worker:${VERSION:-latest}
    build:
      context: .
      dockerfile: ./compose/local/dask/Dockerfile
      args:
        - http_proxy
        - https_proxy
    container_name: orochi_scheduler
    hostname: dask-scheduler
    restart: always
    env_file:
      - ./.envs/.local/.dask
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8786:8786"
      - "8787:8787"
    command:
      [
        "dask",
        "scheduler",
        "--preload",
        "/opt/daskworkerinit.py"
      ]
    volumes:
      - media_path:/media
      - symbols_path:/src/volatility3/volatility3/symbols
      - plugin_path:/src/volatility3/volatility3/plugins/custom
      - yara_path:/yara
      - cache_path:/root/.cache/volatility3

  worker:
    image: ghcr.io/ldo-cert/orochi_worker:${VERSION:-latest}
    deploy:
      replicas: 2
    build:
      context: .
      dockerfile: ./compose/local/dask/Dockerfile
      args:
        - http_proxy
        - https_proxy
    restart: always
    environment:
      - http_proxy=${http_proxy}
      - https_proxy=${https_proxy}
    command:
      [
        "dask",
        "worker",
        "--preload",
        "/opt/daskworkerinit.py",
        "--nthreads",
        "1",
        "--nworkers",
        "2",
        "--memory-limit",
        "3G",
        "tcp://scheduler:8786"
      ]
    volumes:
      - media_path:/media
      - symbols_path:/src/volatility3/volatility3/symbols
      - plugin_path:/src/volatility3/volatility3/plugins/custom
      - yara_path:/yara
      - cache_path:/root/.cache/volatility3
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
      - ./.envs/.local/.dask
