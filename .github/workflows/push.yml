name: docker-compose-actions-workflow
on:
  push:
    branches:
      - master
    tags:
      - "v*"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
      
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./compose/local/django/Dockerfile
            image: ghcr.io/LDO-CERT/orochi_django
          - dockerfile: ./compose/local/dask/Dockerfile
            image: ghcr.io/LDO-CERT/orochi_worker
          - dockerfile: ./compose/local/nginx/Dockerfile
            image: ghcr.io/LDO-CERT/orochi_nginx
            
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      # ðŸŽ¯ NEW STEP: Calculate the Docker build context path reliably
      - name: Calculate Docker Context
        id: context_calc
        run: |
          # Use the 'dirname' bash command to get the directory path from the Dockerfile path.
          DOCKER_CONTEXT=$(dirname ${{ matrix.dockerfile }})
          # Output the result for use in the next step.
          echo "CONTEXT_DIR=$DOCKER_CONTEXT" >> $GITHUB_OUTPUT

      - name: Build and push (with layer caching) ðŸš€
        uses: docker/build-push-action@v5
        with:
          # FIX: Use the calculated context output from the previous step
          context: ${{ steps.context_calc.outputs.CONTEXT_DIR }}
          file: ${{ matrix.dockerfile }}

          platforms: linux/amd64,linux/arm64

          push: ${{ github.event_name != 'pull_request' }}
          
          cache-from: type=gha
          cache-to: type=gha,mode=max 

          tags: |
            ${{ matrix.image }}:latest
            ${{ matrix.image }}:${{ github.sha }}
